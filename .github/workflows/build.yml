name: Build APK

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'

    - name: Install dependencies
      run: |
        sudo apt update
        sudo apt install -y build-essential libssl-dev libffi-dev \
            python3-dev python3-pip git zip unzip openjdk-17-jdk wget

    - name: Install Buildozer and Cython
      run: |
        pip install --upgrade pip
        pip install cython buildozer

    - name: Install Android SDK manually
      run: |
        mkdir -p $HOME/android-sdk
        cd $HOME/android-sdk
        wget https://dl.google.com/android/repository/commandlinetools-linux-11076708_latest.zip -O tools.zip
        unzip tools.zip -d cmdline-tools
        mkdir -p cmdline-tools/latest
        mv cmdline-tools/cmdline-tools/* cmdline-tools/latest/

        export ANDROID_SDK_ROOT=$HOME/android-sdk
        export PATH=$ANDROID_SDK_ROOT/cmdline-tools/latest/bin:$ANDROID_SDK_ROOT/platform-tools:$PATH

        yes | sdkmanager --licenses
        sdkmanager "platforms;android-34" "build-tools;34.0.0" "platform-tools"

    - name: Copy build-tools to Buildozer expected path
      run: |
        mkdir -p /home/runner/.buildozer/android/platform/android-sdk/build-tools
        cp -r $HOME/android-sdk/build-tools/34.0.0 /home/runner/.buildozer/android/platform/android-sdk/build-tools/

    - name: Initialize Buildozer (if needed)
      run: |
        if [ ! -f buildozer.spec ]; then
          buildozer init
        fi

    - name: Build APK
      run: |
        buildozer android debug

    - name: Upload APK
      uses: actions/upload-artifact@v3
      with:
        name: my-app-release
        path: bin/*.apk
